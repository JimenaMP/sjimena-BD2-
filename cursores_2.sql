--EJERCICIO 2. CREAR LA TABLA
CREATE TABLE CARTERA_CLIENTES
( 
  ID_CLIENTE INTEGER PRIMARY KEY,
  NOMBRE VARCHAR2(40),
  SUELDO_BASE FLOAT
)

--GENERAMOS LA SECUENCIA QUE CONTROLA LA PK

CREATE SEQUENCE SEC_CARTERA_CLIENTES --LA PALABRA RESERVADA ES SEQUENCE
--UNA SECUENCIA S I E M P R E TIENE QUE ESTAR ASOCIADA A UNA TABLA
START WITH 1 --EMPIEZA EN 1, PUEDE SER CUALQUIER NUMERO
INCREMENT BY 1 --VA DE 1 EN 1
NOMAXVALUE; --SIN VALOR MAXIMO 

--C) PROCEDIMIENTO ALMACENADO PARA 
--ASOCIAR LA SECUENCIA A LA TABLA DE CARTERA_CLIENTES

CREATE OR REPLACE PROCEDURE GUARDAR_CARTERA
(
  MI_ID OUT INTEGER, -- TENEMOS UN PARAMETRO DE SALIDA, LO GENERA LA SECUENCIA !!!
  --LOS PROCEDIMIENTOS ALMACENADOS GUARDAN EN UNA TABLA, POR ESO
  --TENEMOS 3 ARGUMENTOSSSS
  MI_NOMBRE IN VARCHAR2, --ESTE NOSOTROS LO PROPORCIONAMOS
  MI_SUELDO IN FLOAT --ESTE TAMBIEN, JEJE
)

--DICEN MI PARA IDENTIFICAR QUE OSN LAS VARIABLES DEL PROCEDIMIENTO
--MISMO TIPO Y MISMA CANTIDAD DE ARGUMENTOS
  AS
  BEGIN
  SELECT SEC_CARTERA_CLIENTES.NEXTVAL INTO MI_ID FROM DUAL;
  --EL INTO, NOS DICE QUE ES UN CURSOR IMPLICITO.
  --EL CURSOS IMPLICITO ES CUALQUIER SENTENCIA SELECT QUE TENGA UNA SOLA OCURRENCIA
  --ESTA SENTENCIA SOLO LA PODEMOS APLICAR A SECUENCIAS
  
  --DICE NEXTVAL, POR QUE VA A SEGUIR CON ELK VALOR SIGUIENTE, VIRTUALMENTE
  --SE GENERA LA TABLA DUAL, PARA SABER EN QUE NUMERO DE ID VA, ESTA TABLA
  --SE GENERA CUANDO DAMOS UN VALOR SIGUIENTE EN LA SECUENCIA, ES COMO UN CACHE
  --EXISTE SIEMPRE Y CUANDO SE ESTE EJECUTANDO EL CURSOR
  INSERT INTO CARTERA_CLIENTES VALUES(MI_ID, MI_NOMBRE, MI_SUELDO);
  --ESTE ES UN INSERT NORMALITO, PONEMOS LSO VALORES QUE LE VA PASANDO EL PROCEDIMIENTO
  END;
  /

--D) PROBAMOS CON UN BLOQUE PL-SQL

DECLARE
VALOR INTEGER; --VARIABLE LOCAL PARA EL PK
BEGIN
GUARDAR_CARTERA(VALOR, 'JUAN',400); --PASAMOS LA VARIABLE, NO LE DAMOS NADA :)
--SOLO ESTAMOS ESPECIFICANDO EL VALOR QUE TENEMOS QUE TENER AHI, QUE NOS LO PASA LA SECUENCIA!
END;
/
SELECT * FROM CARTERA_CLIENTES
--YA FUNCIONA!! YAASSSS
